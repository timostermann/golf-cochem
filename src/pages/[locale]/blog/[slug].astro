---
import type { GetStaticPaths } from "astro";
import { fetchApi } from "@lib/strapi";
import type { Blogpost } from "@lib/api-types";
import Layout from "@layouts/Layout.astro";
import { LOCALES } from "@lib/constants";

export const getStaticPaths = (async () => {
  const blogposts = (
    await Promise.all(
      LOCALES.map((locale) =>
        fetchApi<Blogpost[]>({
          endpoint: "blogposts",
          query: {
            locale,
          },
        }),
      ),
    )
  ).flat();

  return blogposts.map((blogpost) => ({
    params: {
      locale: blogpost.locale,
      slug: blogpost.slug,
    },
  }));
}) satisfies GetStaticPaths;

const { locale, slug } = Astro.params;

const blogposts = await fetchApi<Blogpost[]>({
  endpoint: "blogposts",
  query: {
    locale,
  },
});

const blogpost = blogposts.find((blogpost) => blogpost.slug === slug);

if (!blogpost) {
  throw new Error(`No blogpost found for slug: ${slug}`);
}

const { id, content, createdAt, title } = blogpost;
---

<Layout title={title}>
  <h1>Blogpost</h1>
  <p>id: {id}</p>
  <p>slug: {slug}</p>
  <p>title: {title}</p>
  <p>createdAt: {createdAt}</p>
  <p>content: {content}</p>
</Layout>
